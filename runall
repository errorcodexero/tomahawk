#!/usr/bin/env python

# Greatly simplified by using make to do the execution

import os,sys
from optparse import OptionParser
from glob import glob
import os,sys
import commands

if __name__=='__main__':
	p=OptionParser()
	p.add_option('--clean',action='store_true',help="Remove all build artifacts")
	p.add_option('--check',action='store_true',help="Run style checks")
	p.add_option('--test',action='store_true',help="Run unit tests")
	p.add_option('--build',action='store_true',help="Build the executable to load onto the robot")
	options,args=p.parse_args()
	assert len(args)==0

	def clean():
		return os.system('make clean')

	def check():
		# return os.system('make check')
		return os.system('./check_style')

	def test():
		# return os.system('make test')
		return os.system("bazel test --run_under='valgrind --error-exitcode=1' \
				  --cxxopt=-std=c++14 --cxxopt=-Wall --cxxopt=-Werror \
				  --test_verbose_timeout_warnings ...")

	def build():
		return os.system('make FRCUserProgram')

	# always run the style check; the "--check" option just means "run only the style check"
	if check(): sys.exit(1)

	if options.clean: clean()
	if options.test: test()
	if options.build: build()

	if not options.clean and not options.check and not options.test and not options.build:
		sys.exit(test() or build())
